{"version":3,"sources":["actions/index.js","reducers/index.js","serviceWorker.js","components/Header.js","components/People.js","components/Planets.js","components/Species.js","components/Starships.js","components/Vehicles.js","components/View.js","components/Navigation.js","components/App.js","index.js"],"names":["Views","initialState","view","people","id","name","species","homeworld","planets","terrain","classification","starships","model","vehicles","combineReducers","state","arguments","length","undefined","action","type","Boolean","window","location","hostname","match","Header","react_default","a","createElement","AppBar_default","position","color","Toolbar_default","Typography_default","variant","connect","_ref","List_default","map","person","ListItem_default","key","Avatar_default","Person_default","ListItemText_default","primary","secondary","planet","Public_default","s","BugReport_default","starship","AirplanemodeActive_default","vehicle","Motorcycle_default","components_People","components_Planets","components_Species","components_Starships","components_Vehicles","value","dispatch","onChange","event","withStyles","root","backgroundColor","classes","BottomNavigation_default","className","BottomNavigationAction_default","label","icon","People_default","bottomNavigationAction","Language_default","theme","createMuiTheme","palette","main","display","flexDirection","height","flex","overflow","styles","components_Header","components_View","components_Navigation","store","createStore","reducer","ReactDOM","render","es","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e2349f89.chunk.js","sourcesContent":["export const Views = {\n  PEOPLE: 'PEOPLE',\n  PLANETS: 'PLANETS',\n  SPECIES: 'SPECIES',\n  STARSHIPS: 'STARSHIPS',\n  VEHICLES: 'VEHICLES',\n}\n\nexport const navigateTo = view => ({\n  type: 'NAVIGATE',\n  view\n});\n","import { combineReducers } from 'redux';\nimport { Views } from '../actions';\n\nlet initialState = {\n  view: Views.PEOPLE,\n  people: [\n    { id: '1', name: 'Luke Skywalker', species: null, homeworld: 'Tatooine' },\n    { id: '2', name: 'C-3PO', species: 'Droid', homeworld: 'Tatooine' },\n    { id: '3', name: 'R2-D2', species: 'Droid', homeworld: 'Naboo' },\n  ],\n  planets: [\n    { id: '1', name: 'Tatooine', terrain: 'desert' },\n    { id: '2', name: 'Alderaan', terrain: 'grasslands, mountains' },\n    { id: '3', name: 'Yavin IV', terrain: 'jungle, rainforests' },\n  ],\n  species: [\n    { id: '1', name: 'Human', classification: 'mamal' },\n    { id: '2', name: 'Droid', classification: 'artificial' },\n    { id: '3', name: 'Wookie', classification: 'mamal' },\n  ],\n  starships: [\n    { id: '1', name: 'CR90 corvette', model: 'CR90 corvette' },\n    { id: '2', name: 'Star Destroyer', model: 'Imperial I-class Star Destroyer' },\n    { id: '3', name: 'Death Star', model: 'DS-1 Orbital Battle Station' },\n  ],\n  vehicles: [\n    { id: '1', name: 'TIE/LN starfighter', model: 'Twin Ion Engine/Ln Starfighter' },\n    { id: '2', name: 'Snowspeeder', model: 't-47 airspeeder' },\n    { id: '3', name: 'AT-AT', model: 'All Terrain Armored Transport' },\n  ],\n};\n\nfunction view(state = initialState.view, action) {\n  switch (action.type) {\n    case 'NAVIGATE': return action.view;\n    default: return state;\n  }\n}\n\nfunction people(state = initialState.people, action) {\n  return state;\n}\n\nfunction planets(state = initialState.planets, action) {\n  return state;\n}\n\nfunction species(state = initialState.species, action) {\n  return state;\n}\n\nfunction starships(state = initialState.starships, action) {\n  return state;\n}\n\nfunction vehicles(state = initialState.vehicles, action) {\n  return state;\n}\n\nexport default combineReducers({\n  view,\n  people,\n  planets,\n  species,\n  starships,\n  vehicles,\n});\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst Header = () => (\n  <AppBar position=\"relative\" color=\"secondary\">\n    <Toolbar>\n      <Typography color=\"inherit\" variant=\"h6\">\n        Star Wars\n      </Typography>\n    </Toolbar>\n  </AppBar>\n);\n\nexport default Header;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport PersonIcon from '@material-ui/icons/Person';\n\nconst mapStateToProps = state => ({\n  people: state.people,\n});\n\nconst People = ({people}) => (\n  <List>\n  {\n    people.map(person => (\n      <ListItem key={person.id}>\n        <Avatar><PersonIcon /></Avatar>\n        <ListItemText\n          primary={person.name}\n          secondary={(person.species || '') + ' from ' + person.homeworld}\n        />\n      </ListItem>\n    ))\n  }\n  </List>\n);\n\nexport default connect(mapStateToProps)(People);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport PlanetIcon from '@material-ui/icons/Public';\n\nconst mapStateToProps = state => ({\n  planets: state.planets,\n});\n\nconst Planets = ({planets}) => (\n  <List>\n  {\n    planets.map(planet => (\n      <ListItem key={planet.id}>\n        <Avatar><PlanetIcon /></Avatar>\n        <ListItemText\n          primary={planet.name}\n          secondary={'Terrain: ' + planet.terrain}\n        />\n      </ListItem>\n    ))\n  }\n  </List>\n);\n\nexport default connect(mapStateToProps)(Planets);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport SpeciesIcon from '@material-ui/icons/BugReport';\n\nconst mapStateToProps = state => ({\n  species: state.species,\n});\n\nconst Species = ({species}) => (\n  <List>\n  {\n    species.map(s => (\n      <ListItem key={s.id}>\n        <Avatar><SpeciesIcon /></Avatar>\n        <ListItemText\n          primary={s.name}\n          secondary={'Classification: ' + s.classification}\n        />\n      </ListItem>\n    ))\n  }\n  </List>\n);\n\nexport default connect(mapStateToProps)(Species);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport StarshipIcon from '@material-ui/icons/AirplanemodeActive';\n\nconst mapStateToProps = state => ({\n  starships: state.starships,\n});\n\nconst Starships = ({starships}) => (\n  <List>\n  {\n    starships.map(starship => (\n      <ListItem key={starship.id}>\n        <Avatar><StarshipIcon /></Avatar>\n        <ListItemText\n          primary={starship.name}\n          secondary={'Model: ' + starship.model}\n        />\n      </ListItem>\n    ))\n  }\n  </List>\n);\n\nexport default connect(mapStateToProps)(Starships);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport VehicleIcon from '@material-ui/icons/Motorcycle';\n\nconst mapStateToProps = state => ({\n  vehicles: state.vehicles,\n});\n\nconst Vehicles = ({vehicles}) => (\n  <List>\n  {\n    vehicles.map(vehicle => (\n      <ListItem key={vehicle.id}>\n        <Avatar><VehicleIcon /></Avatar>\n        <ListItemText\n          primary={vehicle.name}\n          secondary={'Model: ' + vehicle.model}\n        />\n      </ListItem>\n    ))\n  }\n  </List>\n);\n\nexport default connect(mapStateToProps)(Vehicles);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Views } from '../actions';\nimport People from './People';\nimport Planets from './Planets';\nimport Species from './Species';\nimport Starships from './Starships';\nimport Vehicles from './Vehicles';\n\nconst mapStateToProps = state => ({\n  view: state.view,\n});\n\nconst View = ({view}) => {\n  switch (view) {\n    case Views.PEOPLE: return <People />;\n    case Views.PLANETS: return <Planets />;\n    case Views.SPECIES: return <Species />;\n    case Views.STARSHIPS: return <Starships />;\n    case Views.VEHICLES: return <Vehicles />;\n    default: return <div />;\n  }\n};\n\nexport default connect(mapStateToProps)(View);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport PeopleIcon from '@material-ui/icons/People';\nimport PlanetsIcon from '@material-ui/icons/Language';\nimport SpeciesIcon from '@material-ui/icons/BugReport';\nimport StarshipsIcon from '@material-ui/icons/AirplanemodeActive';\nimport VehiclesIcon from '@material-ui/icons/Motorcycle';\nimport { Views, navigateTo } from '../actions';\n\nconst mapStateToProps = state => ({\n  value: state.view,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: (event, value) => dispatch(navigateTo(value)),\n});\n\nconst styles = {\n  root: {\n    backgroundColor: '#F7F7F7',\n  },\n};\n\nconst Navigation = ({value, onChange, classes}) => (\n  <BottomNavigation value={value} onChange={onChange} className={classes.root}>\n    <BottomNavigationAction label=\"People\" value={Views.PEOPLE} icon={<PeopleIcon />}  className={classes.bottomNavigationAction} />\n    <BottomNavigationAction label=\"Planets\" value={Views.PLANETS} icon={<PlanetsIcon />} />\n    <BottomNavigationAction label=\"Species\" value={Views.SPECIES} icon={<SpeciesIcon />} />\n    <BottomNavigationAction label=\"Starships\" value={Views.STARSHIPS} icon={<StarshipsIcon />} />\n    <BottomNavigationAction label=\"Vehicles\" value={Views.VEHICLES} icon={<VehiclesIcon />} />\n  </BottomNavigation>\n);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(Navigation));\n","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme, withStyles } from '@material-ui/core/styles';\nimport Header from './Header';\nimport View from './View';\nimport Navigation from './Navigation';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: '#00A4DB' },\n    secondary: { main: '#15233C' },\n  },\n});\n\nconst styles = {\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n  },\n  view: {\n    flex: 1,\n    overflow: 'scroll',\n  },\n};\n\nconst App = ({classes}) => (\n  <MuiThemeProvider theme={theme}>\n    <div className={classes.root}>\n      <Header />\n      <div className={classes.view}>\n        <View />\n      </div>\n      <Navigation />\n    </div>\n  </MuiThemeProvider>\n);\n\nexport default withStyles(styles)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './reducers';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\nimport './index.css';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}